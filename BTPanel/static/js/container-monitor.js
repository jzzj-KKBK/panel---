import{K as e,gJ as t,v as s,R as a,gK as l,e as i}from"./utils-lib.js?v=1756369731";import{c as r,r as o,k as n,ay as c,w as m,p as u,aD as d,G as p,H as v,x as f,q as b,v as x,y as _,B as g,z as w,e as h,n as y}from"./base-lib.js?v=1756369731";import"./__commonjsHelpers__.js?v=1756369731";const k={class:"flex flex-col !h-full"},B={class:"card"},S={class:"con flex items-center"},I={class:"p-[1.5rem] text-[1.2rem] font-bold"},j={class:"text-[#919191]"},z={class:"p-[1.5rem] text-[1.2rem] font-bold"},A={class:"text-[#919191]"},D={class:"chartCon flex flex-wrap w-full justify-between"},K={class:"flex w-[49%]"},M={class:"card w-full flex-1 mb-[1rem]"},R={class:"chart w-full h-[19rem]"},C={class:"flex w-[49%]"},L={class:"card w-full flex-1 mb-[1rem]"},N={class:"chart w-full h-[19rem]"},P={class:"flex w-[49%]"},G={class:"card w-full flex-1 mb-[1rem]"},O={class:"chart w-full h-[19rem]"},U={class:"flex w-[49%]"},q={class:"card w-full flex-1 mb-[1rem]"},H={class:"chart w-full h-[19rem]"},J=i(r({__name:"container-monitor",props:{compData:{default:()=>({})}},setup(i){const r=i,J=o(),T=o(),E=o(),F=o(),Q=o(!1),V=o(),W=n({cpu_list:[],mem_list:{usage:[],cache:[]},disk_list:{read:[],write:[]},network_list:{tx:[],rx:[]},time_list:[],limit:"",top_limit:"",bottom_limit:""}),X=async a=>{const l=(new Date).getTime(),i=JSON.stringify({id:a.id,dk_status:a.status}),r=await e({request:t({data:i})}),o=r.data;if(!r.status)return!1;W.limit=s(o.limit),W.top_limit=s(o.tx_total),W.bottom_limit=s(o.rx_total),W.time_list.push(l),W.mem_list.usage.push([l,s(o.usage,!1,null,"MB")]),W.mem_list.cache.push([l,s(o.cache,!1,null,"MB")]),W.cpu_list.push([l,o.cpu_usage]),W.disk_list.read.push([l,s(o.read_total,!1,null,"MB")]),W.disk_list.write.push([l,s(o.write_total,!1,null,"MB")]),W.network_list.tx.push([l,s(o.tx,!1,null,"KB")]),W.network_list.rx.push([l,s(o.rx,!1,null,"KB")]);const n=Y("cpu"),c=Y("mem"),m=Y("disk"),u=Y("network");n.xAxis.data=W.time_list,n.series[0].data=W.cpu_list,c.series[0].data=W.mem_list.usage,c.series[1].data=W.mem_list.cache,m.series[0].data=W.disk_list.read,m.series[1].data=W.disk_list.write,u.series[0].data=W.network_list.tx,u.series[1].data=W.network_list.rx,ee.value=n,te.value=c,se.value=m,ae.value=u,Q.value=!1},Y=e=>{let t="/MB",s=Z();switch(e){case"cpu":s.tooltip.formatter=function(e){const t=e[0];return a(t.data[0])+"<br>"+t.seriesName+": "+t.data[1]+"%"},s.yAxis.min=0,s.series=[{name:"CPU",type:"line",symbol:"none",smooth:!0,itemStyle:{normal:{color:"rgb(0, 153, 238)"}}}];break;case"network":t="/KB";case"mem":case"disk":var l={mem:["内存","缓存"],disk:["读取","写入"],network:["上行","下行"],color:[{mem:["rgb(185, 220, 253)","rgb(185, 220, 253,0.6)","rgb(185, 220, 253,0.3)","rgba(229,147,187)","rgba(229,147,187,0.6)","rgba(229,147,187,0.3)"],disk:["rgb(255, 70, 131)","rgb(255, 70, 131,0.6)","rgb(255, 70, 131,0.3)","rgba(46, 165, 186)","rgba(46, 165, 186,0.6)","rgba(46, 165, 186,0.3)"],network:["rgb(255, 140, 0)","rgb(255, 140, 0,0.6)","rgb(255, 140, 0,0.3)","rgb(30, 144, 255)","rgb(30, 144, 255,0.6)","rgb(30, 144, 255,0.3)"]}]};s.tooltip.formatter=function(e){const s=e[0].data[0],l=a(s/1e3);let i="";for(var r=0;r<e.length;r++)i+='<span style="display: inline-block; width: 10px; height: 10px; margin-rigth:10px; border-radius: 50%; background: '+e[r].color+';"></span>  '+e[r].seriesName+"：",i+=e[r].data[1]+t+(e.length-1!==r?"<br />":"");return"时间："+l+"<br />"+i},s.legend={top:"18px",data:l[e]},s.series=[{name:l[e][0],type:"line",symbol:"none",itemStyle:{normal:{color:l.color[0][e][0],areaStyle:{}}}},{name:l[e][1],type:"line",symbol:"none",itemStyle:{normal:{color:l.color[0][e][4],areaStyle:{}}}}]}return s},Z=()=>({tooltip:{trigger:"axis",axisPointer:{type:"cross"}},grid:{x:50,y:50,x2:30,y2:30},xAxis:{type:"time",scale:!0,splitNumber:2,boundaryGap:!0,axisLine:{lineStyle:{color:"#666"}},axisLabel:{formatter:e=>a(e/1e3,"hh:mm:ss")}},yAxis:{type:"value",boundaryGap:[0,"100%"],splitLine:{lineStyle:{color:"#ddd"}},axisLine:{lineStyle:{color:"#666"}}}}),$=c("tabActive");m(()=>$.value,()=>{"monitor"!==$.value&&(V.value&&clearInterval(V.value),V.value=null)});const ee=o(Y("cpu")),te=o(Y("mem")),se=o(Y("disk")),ae=o(Y("network"));return u(()=>{var e;Q.value=!0,e=r.compData.row,y(()=>{ee.value=Y("cpu"),te.value=Y("mem"),se.value=Y("disk"),ae.value=Y("network"),J.value.chart.resize(),T.value.chart.resize(),E.value.chart.resize(),F.value.chart.resize(),X(e)}),V.value=setInterval(function(){X(r.compData.row)},3e3)}),d(()=>{clearInterval(V.value)}),(e,t)=>{const s=l,a=p("bt-loading");return v((b(),x("div",k,[_("div",B,[t[2]||(t[2]=_("div",{class:"title"},"基础信息",-1)),_("div",S,[_("div",I,[t[0]||(t[0]=g(" 内存限额：",-1)),_("span",j,w(f(W).limit),1)]),_("div",z,[t[1]||(t[1]=g(" 流量情况：",-1)),_("span",A," 上行："+w(f(W).top_limit)+" - 下行："+w(f(W).bottom_limit),1)])])]),_("div",D,[_("div",K,[_("div",M,[t[3]||(t[3]=_("div",{class:"title"},"CPU",-1)),_("div",R,[h(s,{ref_key:"CPURef",ref:J,options:f(ee)},null,8,["options"])])])]),_("div",C,[_("div",L,[t[4]||(t[4]=_("div",{class:"title"},"内存",-1)),_("div",N,[h(s,{ref_key:"memRef",ref:T,options:f(te)},null,8,["options"])])])]),_("div",P,[_("div",G,[t[5]||(t[5]=_("div",{class:"title"},"磁盘IO",-1)),_("div",O,[h(s,{ref_key:"diskRef",ref:E,options:f(se)},null,8,["options"])])])]),_("div",U,[_("div",q,[t[6]||(t[6]=_("div",{class:"title"},"网络IO",-1)),_("div",H,[h(s,{ref_key:"netRef",ref:F,options:f(ae)},null,8,["options"])])])])])])),[[a,f(Q)],[a,"正在获取监控数据，请稍候...","title"]])}}}),[["__scopeId","data-v-aa6cce5f"]]);export{J as default};
