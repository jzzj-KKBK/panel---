!function(){function e(t){return e="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},e(t)}function t(e){return function(e){if(Array.isArray(e))return r(e)}(e)||function(e){if("undefined"!=typeof Symbol&&null!=e[Symbol.iterator]||null!=e["@@iterator"])return Array.from(e)}(e)||function(e,t){if(e){if("string"==typeof e)return r(e,t);var n={}.toString.call(e).slice(8,-1);return"Object"===n&&e.constructor&&(n=e.constructor.name),"Map"===n||"Set"===n?Array.from(e):"Arguments"===n||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)?r(e,t):void 0}}(e)||function(){throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}function r(e,t){(null==t||t>e.length)&&(t=e.length);for(var r=0,n=Array(t);r<t;r++)n[r]=e[r];return n}function n(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter(function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable})),r.push.apply(r,n)}return r}function o(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?n(Object(r),!0).forEach(function(t){u(e,t,r[t])}):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):n(Object(r)).forEach(function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))})}return e}function u(t,r,n){return(r=function(t){var r=function(t,r){if("object"!=e(t)||!t)return t;var n=t[Symbol.toPrimitive];if(void 0!==n){var o=n.call(t,r||"default");if("object"!=e(o))return o;throw new TypeError("@@toPrimitive must return a primitive value.")}return("string"===r?String:Number)(t)}(t,"string");return"symbol"==e(r)?r:r+""}(r))in t?Object.defineProperty(t,r,{value:n,enumerable:!0,configurable:!0,writable:!0}):t[r]=n,t}function a(){/*! regenerator-runtime -- Copyright (c) 2014-present, Facebook, Inc. -- license (MIT): https://github.com/babel/babel/blob/main/packages/babel-helpers/LICENSE */var e,t,r="function"==typeof Symbol?Symbol:{},n=r.iterator||"@@iterator",o=r.toStringTag||"@@toStringTag";function u(r,n,o,u){var a=n&&n.prototype instanceof c?n:c,s=Object.create(a.prototype);return i(s,"_invoke",function(r,n,o){var u,a,i,c=0,s=o||[],f=!1,p={p:0,n:0,v:e,a:m,f:m.bind(e,4),d:function(t,r){return u=t,a=0,i=e,p.n=r,l}};function m(r,n){for(a=r,i=n,t=0;!f&&c&&!o&&t<s.length;t++){var o,u=s[t],m=p.p,d=u[2];r>3?(o=d===n)&&(i=u[(a=u[4])?5:(a=3,3)],u[4]=u[5]=e):u[0]<=m&&((o=r<2&&m<u[1])?(a=0,p.v=n,p.n=u[1]):m<d&&(o=r<3||u[0]>n||n>d)&&(u[4]=r,u[5]=n,p.n=d,a=0))}if(o||r>1)return l;throw f=!0,n}return function(o,s,d){if(c>1)throw TypeError("Generator is already running");for(f&&1===s&&m(s,d),a=s,i=d;(t=a<2?e:i)||!f;){u||(a?a<3?(a>1&&(p.n=-1),m(a,i)):p.n=i:p.v=i);try{if(c=2,u){if(a||(o="next"),t=u[o]){if(!(t=t.call(u,i)))throw TypeError("iterator result is not an object");if(!t.done)return t;i=t.value,a<2&&(a=0)}else 1===a&&(t=u.return)&&t.call(u),a<2&&(i=TypeError("The iterator does not provide a '"+o+"' method"),a=1);u=e}else if((t=(f=p.n<0)?i:r.call(n,p))!==l)break}catch(t){u=e,a=1,i=t}finally{c=1}}return{value:t,done:f}}}(r,o,u),!0),s}var l={};function c(){}function s(){}function f(){}t=Object.getPrototypeOf;var p=[][n]?t(t([][n]())):(i(t={},n,function(){return this}),t),m=f.prototype=c.prototype=Object.create(p);function d(e){return Object.setPrototypeOf?Object.setPrototypeOf(e,f):(e.__proto__=f,i(e,o,"GeneratorFunction")),e.prototype=Object.create(m),e}return s.prototype=f,i(m,"constructor",f),i(f,"constructor",s),s.displayName="GeneratorFunction",i(f,o,"GeneratorFunction"),i(m),i(m,o,"Generator"),i(m,n,function(){return this}),i(m,"toString",function(){return"[object Generator]"}),(a=function(){return{w:u,m:d}})()}function i(e,t,r,n){var o=Object.defineProperty;try{o({},"",{})}catch(e){o=0}i=function(e,t,r,n){function u(t,r){i(e,t,function(e){return this._invoke(t,r,e)})}t?o?o(e,t,{value:r,enumerable:!n,configurable:!n,writable:!n}):e[t]=r:(u("next",0),u("throw",1),u("return",2))},i(e,t,r,n)}function l(e,t,r,n,o,u,a){try{var i=e[u](a),l=i.value}catch(e){return void r(e)}i.done?t(l):Promise.resolve(l).then(n,o)}function c(e){return function(){var t=this,r=arguments;return new Promise(function(n,o){var u=e.apply(t,r);function a(e){l(u,n,o,a,i,"next",e)}function i(e){l(u,n,o,a,i,"throw",e)}a(void 0)})}}System.register(["./base-lib-legacy.js?v=1756369731","./utils-lib-legacy.js?v=1756369731","./useController-legacy3.js?v=1756369731","./__commonjsHelpers__-legacy.js?v=1756369731","./validator-legacy.js?v=1756369731","./index-legacy104.js?v=1756369731","./column-legacy.js?v=1756369731"],function(e,r){"use strict";var n,u,i,l,s,f,p,m,d,y,v,b,g,h,_,w,j,O,S,x,V,z,P,k,E,N,B,C,T,A,U;return{setters:[function(e){n=e.r,u=e.k,i=e.c,l=e.p,s=e.q,f=e.v,p=e.y,m=e.e,d=e.A,y=e.x,v=e.B,b=e.z,g=e.M,h=e.C,_=e.F,w=e.T,j=e.ax,O=e.a$,S=e.ag,x=e.af,V=e.a9,z=e.D,P=e.a7},function(e){k=e.v,E=e.o,N=e.K,B=e.b,C=e.j},function(e){T=e.P,A=e.Q,U=e.R},null,null,null,null],execute:function(){var r=B(),q=n(),G=n({status:!1,num:180,compress:!1,log_size:10,stype:"day",hour:2,minute:0}),I=n("开启后默认每天 2 点 0 分进行切割日志文件，如需修改下面配置"),M=u({num:[{validator:function(e,t,r){var n="日志保留最新份必须大于0",o="请输入整数";""===t?r(new Error("请输入日志保留最新份")):isNaN(t)||Number(t)<1?r(new Error(n)):Number.isInteger(Number(t))?r():r(new Error(o))},trigger:"blur"}],log_size:[{required:!0,message:"请输入日志大小",trigger:"blur"},{validator:function(e,t,r){!/^\d+(\.\d+)?$/.test(t)||t<=0?r(new Error("请输入大于0的数")):r()},trigger:["blur","change"]}],hour:[{required:!0,message:"请输入小时",trigger:"blur"},{validator:function(e,t,r){t<0||t>23||!Number.isInteger(Number(t))?r(new Error("请输入0-23之间的整数")):r()},trigger:["blur","change"]}],minute:[{required:!0,message:"请输入分钟",trigger:"blur"},{validator:function(e,t,r){t<0||t>59||!Number.isInteger(Number(t))?r(new Error("请输入0-59之间的整数")):r()},trigger:["blur","change"]}]}),D=function(){var e=c(a().m(function e(){var t,r,n,o;return a().w(function(e){for(;;)switch(e.p=e.n){case 0:return e.p=0,e.n=1,T();case 1:t=e.v,r=t.data.value,n=r.status,o=r.log_size,G.value=t.data.value,G.value.status=Boolean(n),G.value.log_size=o?k(o,!1,2,"MB"):"10.00",I.value="开启后".concat("size"===G.value.stype?"日志文件大小超过":"默认每天").concat("size"===G.value.stype?G.value.log_size+"MB":" ".concat(G.value.hour," 点 ").concat(G.value.minute," 分"),"进行切割日志文件，如需修改下面配置"),e.n=3;break;case 2:e.p=2,e.v;case 3:return e.a(2)}},e,null,[[0,2]])}));return function(){return e.apply(this,arguments)}}(),F=function(){var e=c(a().m(function e(t){return a().w(function(e){for(;;)switch(e.n){case 0:return G.value.status=!t,e.n=1,E({title:"设置日志切割任务",content:(t?"开启后":"关闭后停止")+"对计划任务日志进行切割，是否继续操作？"});case 1:return e.n=2,N({loading:"正在设置，请稍后...",request:A(),message:!0,success:D});case 2:return e.a(2)}},e)}));return function(t){return e.apply(this,arguments)}}(),$=function(){var e,t;I.value="开启后".concat("size"===G.value.stype?"日志文件大小超过 ":"默认每天 ").concat("size"===G.value.stype?G.value.log_size+" MB ":"".concat((null===(e=G.value.hour)||void 0===e?void 0:e.toString())||"-"," 点 ").concat((null===(t=G.value.minute)||void 0===t?void 0:t.toString())||"-"," 分"),"进行切割日志文件，如需修改下面配置")},R=function(e){return e<10?"0".concat(e):"".concat(e)},H=function(){var e=c(a().m(function e(){var t,n,u,i;return a().w(function(e){for(;;)switch(e.n){case 0:return e.n=1,q.value.validate();case 1:if(t=G.value,n=t.stype,u=t.log_size,!("size"===n&&u<=0)){e.n=2;break}return r.error("日志大小必须大于0"),e.a(2);case 2:return(i=o({},G.value)).status=Number(G.value.status),i.compress=Number(G.value.compress),"day"===i.stype&&(i.log_size=0),e.n=3,N({loading:"正在设置，请稍后...",request:U(i),message:!0});case 3:D();case 4:return e.a(2)}},e)}));return function(){return e.apply(this,arguments)}}(),K={class:"p-[20px]"},Q={class:"mt-[16px] flex items-center"},J={class:"ml-[8px]"},L={class:"py-[20px]"},W={class:"flex items-center"},X={class:"mt-[8px] leading-8 text-[1.2rem] list-disc ml-[20px]"},Y={key:0};e("default",i({__name:"index",setup:function(e,r){return(0,r.expose)({onConfirm:H}),l(function(){return D()}),function(e,r){var n,o=w,u=j,a=O,i=S,l=x,c=V,k=C,E=z,N=P;return s(),f("div",K,[p("div",Q,[m(u,{placement:"bottom",width:"200","popper-class":"green-tips-popover",trigger:"hover"},{reference:d(function(){return[m(o,{modelValue:y(G).status,"onUpdate:modelValue":r[0]||(r[0]=function(e){return y(G).status=e}),onChange:y(F)},{default:d(function(){return t(r[7]||(r[7]=[v("日志切割",-1)]))}),_:1},8,["modelValue","onChange"])]}),default:d(function(){return[r[8]||(r[8]=p("span",{class:"p-[8px] inline-block"},"当日志文件过大时，读取和搜索时间会增加，同时也会占用存储空间，因此需要对日志进行切割以方便管理和维护。",-1))]}),_:1}),p("span",J,b(y(I)),1)]),m(a),p("div",L,[m(N,{ref_key:"logSplitRef",ref:q,model:y(G),rules:y(M),class:"-ml-3rem"},{default:d(function(){return[m(c,{label:"切割方式"},{default:d(function(){return[m(l,{modelValue:y(G).stype,"onUpdate:modelValue":r[1]||(r[1]=function(e){return y(G).stype=e}),onChange:y($)},{default:d(function(){return[m(i,{value:"size"},{default:d(function(){return t(r[9]||(r[9]=[v("按日志大小",-1)]))}),_:1}),m(i,{value:"day"},{default:d(function(){return t(r[10]||(r[10]=[v("按执行周期",-1)]))}),_:1})]}),_:1},8,["modelValue","onChange"])]}),_:1}),"day"==y(G).stype?(s(),g(c,{key:0,label:"执行时间"},{default:d(function(){return[p("div",W,[m(c,{label:"",prop:"hour"},{default:d(function(){return[m(k,{onBlur:y($),type:"number",width:"18.6rem",modelValue:y(G).hour,"onUpdate:modelValue":r[2]||(r[2]=function(e){return y(G).hour=e}),min:"0",max:"23"},{prepend:d(function(){return t(r[11]||(r[11]=[v("每天",-1)]))}),append:d(function(){return t(r[12]||(r[12]=[v("时",-1)]))}),_:1},8,["onBlur","modelValue"])]}),_:1}),m(c,{label:"",prop:"minute",class:"!mt-0"},{default:d(function(){return[m(k,{type:"number",width:"12rem",min:"0",onBlur:y($),max:"59",modelValue:y(G).minute,"onUpdate:modelValue":r[3]||(r[3]=function(e){return y(G).minute=e})},{append:d(function(){return t(r[13]||(r[13]=[v("分",-1)]))}),_:1},8,["onBlur","modelValue"])]}),_:1})])]}),_:1})):"size"==y(G).stype?(s(),g(c,{key:1,label:"日志大小",prop:"log_size"},{default:d(function(){return[m(k,{onBlur:y($),type:"number",width:"16rem",modelValue:y(G).log_size,"onUpdate:modelValue":r[4]||(r[4]=function(e){return y(G).log_size=e})},{append:d(function(){return t(r[14]||(r[14]=[v("MB",-1)]))}),_:1},8,["onBlur","modelValue"])]}),_:1})):h("",!0),m(c,{label:"保留最新",prop:"num"},{default:d(function(){return[m(k,{type:"number",modelValue:y(G).num,"onUpdate:modelValue":r[5]||(r[5]=function(e){return y(G).num=e}),min:1,width:"14rem"},{append:d(function(){return t(r[15]||(r[15]=[v("份",-1)]))}),_:1},8,["modelValue"])]}),_:1}),m(c,{label:" "},{default:d(function(){return[m(o,{modelValue:y(G).compress,"onUpdate:modelValue":r[6]||(r[6]=function(e){return y(G).compress=e})},{default:d(function(){return t(r[16]||(r[16]=[v("切割后压缩日志",-1)]))}),_:1},8,["modelValue"])]}),_:1}),m(c,{label:" "},{default:d(function(){return[m(E,{type:"primary",onClick:y(H)},{default:d(function(){return t(r[17]||(r[17]=[v("保存",-1)]))}),_:1},8,["onClick"])]}),_:1})]}),_:1},8,["model","rules"]),p("ul",X,["day"===y(G).stype?(s(),f("li",Y," 每天的 "+b(null!==(n=y(G).hour)&&void 0!==n&&n.toString()?y(R)(y(G).hour):"--")+":"+b(y(G).minute.toString()?y(R)(y(G).minute):"--")+" 执行一次， 被切割后日志将会被清空 ",1)):(s(),f(_,{key:1},[r[18]||(r[18]=p("li",null,"每5分钟执行一次， 被切割后日志将会被清空",-1)),r[19]||(r[19]=p("li",null,"【日志大小】：日志文件大小超过指定大小时进行切割日志文件",-1))],64)),r[20]||(r[20]=p("li",null,"【保留最新】：保留最新的日志文件，超过指定数量时，将自动删除旧的日志文件",-1)),r[21]||(r[21]=p("li",null,"该功能开启后会对计划任务在/www/server/cron目录下产生的日志(.log格式)进行切割",-1))])])])}}}))}}})}();
