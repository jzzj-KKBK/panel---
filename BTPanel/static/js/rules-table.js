import{L as e}from"./utils-lib.js?v=1756369731";import{s as l,j as a,k as t,g as o,b as r,l as s}from"./api.js?v=1756369731";import{a as u,t as i}from"./store7.js?v=1756369731";import{c as d,x as n,r as c,k as p,p as m,G as v,q as P,v as b,M as f,A as y,B as h,C as _,e as g,y as w,H as C,P as V,F as k,a_ as A}from"./base-lib.js?v=1756369731";import"./__commonjsHelpers__.js?v=1756369731";const B={class:"p-2rem"},x=d({__name:"rules-table",props:{dependencies:{default:()=>({})}},setup(d,{expose:x}){const E=d,{BtDialog:T,ElButton:j,BtTable:I,BtInput:F,BtTableGroup:R,ElTooltip:U,ElForm:D,ElFormItem:q,ElSelect:H,ElOption:O}=n(E.dependencies.components),{useAxios:S,useMessage:G,useConfirm:L,useDialog:M}=n(E.dependencies.hooks),{setPortConfig:z,useOperate:J,portsPs:K}=n(E.dependencies.custom),N=[{label:"TCP",value:"tcp"},{label:"UDP",value:"udp"}],Q=G(),W=c(!1),X=c(!1),Y=c(!1),Z=c([]),$=c(!1),ee=c(!1),le=c(),ae=p({Port:"",CidrBlock:"",ps:"",Protocol:""}),te=c(!1),oe=c(!1),re=p({Port:[{required:!0,message:"请输入端口",trigger:"blur"}],ps:[{validator:(e,l,a)=>{l&&(null==l?void 0:l.length)>60?a(new Error("备注不能超过60个字符")):a()},trigger:["blur","change"]}]}),se=async e=>{await L({icon:"warning",title:"删除防火墙规则",content:"删除后可能导致服务无法访问，是否继续操作？"});try{const l=Q.load("正在删除防火墙规则，请稍后..."),t=e;delete t.FirewallRuleDescription;const o=await a(t);l.close(),Q.request(o),o.status&&ie()}catch(l){}},ue=()=>{te.value||oe.value?ce():(X.value=!0,ie())},ie=async()=>{te.value=!1;try{Y.value=!0;const e=await t();oe.value=!Array.isArray(e.data.FirewallRuleSet),Z.value=Array.isArray(e.data.FirewallRuleSet)?e.data.FirewallRuleSet:[]}catch(e){te.value=!0}finally{Y.value=!1}},de=e=>({label:"端口",prop:"Port",renderHeader:()=>{return e="防火墙会加载系统所有端口信息，IPV6端口无法与IPV4分开管理，非必要勿删除IPV6端口",g("div",null,[g("span",null,["端口"]),g(U,{content:e,placement:"top"},{default:()=>[g("span",{class:"ml-4x bt-ico-ask"},["?"])]})]);var e},width:300,render:l=>{l.brief=l.brief||K[l.Port];const a=Z.value.some(e=>e.Port===l.Port),t=["20","21","22","80","443","8888","3306"].includes(l.Port);return g("div",null,[g("span",{class:"mr-[1rem]"},[l.Port+("ipv6"===l.Family?"（ipv6）":"")]),a||t||!1===e?"":g("span",{class:"bt-link cursor-pointer",onClick:()=>{var e;ne({Port:l.Port,CidrBlock:"all"!==l.Address?l.Address:"",ps:null==(e=l.brief)?void 0:e.substring(0,60),Protocol:l.Protocol})}},[h("点击放行，腾讯云轻量云防火墙端口")])])}}),ne=e=>{te.value||oe.value?ce():(me(),ee.value=!!e,e&&Object.assign(ae,e),$.value=!0)},ce=l=>{(l=l||{}).alert=te.value?"当前密钥错误，请重新关联API密钥":"",M({isAsync:!0,component:()=>e(()=>import("./config5.js?v=1756369731"),__vite__mapDeps([]),import.meta.url),title:!1,area:[48],compData:{...l,dependencies:E.dependencies}})},pe=async()=>{try{await le.value.validate();const e=Q.load("正在添加防火墙规则，请稍后..."),l={...ae,Protocol:ae.Protocol||"tcp",ActionType:"ACCEPT",CidrBlock:ae.CidrBlock||"0.0.0.0/0"},a=await s(l);e.close(),Q.request(a),a.status&&($.value=!1,ie())}catch(e){}},me=()=>{ae.Port="",ae.CidrBlock="",ae.ps="",ae.Protocol="tcp"},ve=c([{label:"应用类型",prop:"AppType"},{label:"来源",prop:"CidrBlock"},{label:"协议",prop:"Protocol",width:150},{label:"端口",prop:"Port",width:120},{label:"策略",prop:"Action",width:60,render:e=>{const l="ACCEPT"===e.Action;return g("span",{class:l?"text-primary":"text-danger"},[l?"允许":"拒绝"])}},J([{onClick:se,isHide:()=>1===Z.value.length,title:"删除"}])]);return m(async()=>{try{if(l(S),await(async()=>{try{const{data:e}=await o();!1===(null==e?void 0:e.status)&&(null==e?void 0:e.msg)&&(oe.value=!0);const{data:l}=await r();"lighthouse"===(null==l?void 0:l.server_type)&&(W.value=!0),u.value=l,i.value="cvm"===l.server_type}catch(e){}})(),!W.value)return void z(de(!1));await ie(),z(de())}catch(e){z(de(!1)),W.value=!1}}),x({getPortConfig:de}),(e,l)=>{const a=v("bt-loading");return P(),b("div",null,[n(W)?(P(),f(n(j),{key:0,type:"default",class:"!mr-[1rem]",onClick:ue},{default:y(()=>[...l[7]||(l[7]=[h("轻量云防火墙规则",-1)])]),_:1})):_("",!0),g(n(T),{title:"轻量云防火墙规则",modelValue:n(X),"onUpdate:modelValue":l[1]||(l[1]=e=>V(X)?X.value=e:null),area:[80]},{default:y(()=>[w("div",B,[g(n(R),null,{"header-left":y(()=>[g(n(j),{type:"primary",onClick:l[0]||(l[0]=e=>ne())},{default:y(()=>[...l[8]||(l[8]=[h("添加规则",-1)])]),_:1})]),"header-right":y(()=>[...l[9]||(l[9]=[])]),content:y(()=>[C(g(n(I),{ref:"ftpTable",column:n(ve),data:n(Z),description:"列表为空","max-height":360},null,8,["column","data"]),[[a,n(Y)],[a,"正在加载轻量云防火墙规则列表，请稍后...","title"]])]),_:1})])]),_:1},8,["modelValue"]),g(n(T),{title:"添加轻量云防火墙规则",modelValue:n($),"onUpdate:modelValue":l[6]||(l[6]=e=>V($)?$.value=e:null),"show-footer":!0,area:[48],onConfirm:pe},{default:y(()=>[g(n(D),{ref_key:"addRulesformRef",ref:le,class:"p-2rem",model:n(ae),rules:n(re)},{default:y(()=>[g(n(q),{label:"端口",prop:"Port"},{default:y(()=>[g(n(F),{modelValue:n(ae).Port,"onUpdate:modelValue":l[2]||(l[2]=e=>n(ae).Port=e),width:"30rem",disabled:n(ee),placeholder:"端口范围1到65535之间，支持端口放行范围80-90"},null,8,["modelValue","disabled"])]),_:1}),g(n(q),{label:"协议",prop:"Protocol"},{default:y(()=>[g(n(H),{modelValue:n(ae).Protocol,"onUpdate:modelValue":l[3]||(l[3]=e=>n(ae).Protocol=e),class:"!w-[30rem]"},{default:y(()=>[(P(),b(k,null,A(N,e=>g(n(O),{key:e.value,label:e.label,value:e.value},null,8,["label","value"])),64))]),_:1},8,["modelValue"])]),_:1}),g(n(q),{label:"允许访问IP"},{default:y(()=>[g(n(F),{modelValue:n(ae).CidrBlock,"onUpdate:modelValue":l[4]||(l[4]=e=>n(ae).CidrBlock=e),width:"30rem",disabled:n(ee),placeholder:"默认为空，表示所有来源，支持IP网段，可为空"},null,8,["modelValue","disabled"])]),_:1}),g(n(q),{label:"备注",prop:"ps"},{default:y(()=>[g(n(F),{modelValue:n(ae).ps,"onUpdate:modelValue":l[5]||(l[5]=e=>n(ae).ps=e),rows:4,type:"textarea",width:"30rem",placeholder:"备注和说明，可为空"},null,8,["modelValue"])]),_:1}),g(n(q),{label:""},{default:y(()=>[...l[10]||(l[10]=[w("ul",{class:"pl-[4rem] list-disc text-[#777] leading-[2.4rem] text-12px"},[w("li",null,"支持添加多个端口，如：80,88"),w("li",null,"支持添加多个端口范围，如：80,88,90-99,110-120")],-1)])]),_:1})]),_:1},8,["model","rules"])]),_:1},8,["modelValue"])])}}});export{x as default};
function __vite__mapDeps(indexes) {
  if (!__vite__mapDeps.viteFileDeps) {
    __vite__mapDeps.viteFileDeps = []
  }
  return indexes.map((i) => __vite__mapDeps.viteFileDeps[i])
}
