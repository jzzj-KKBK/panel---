import{_ as a}from"./index103.js?v=1756369731";import{u as e,o as t,M as s,K as l,k as i,v as n}from"./utils-lib.js?v=1756369731";import{c as r,r as o,U as p,ay as d,k as u,p as c,G as m,q as y,v,e as f,x as g,A as b,H as x,C as h,y as w,aW as j,aB as q}from"./base-lib.js?v=1756369731";import{batchDelMysqlData as _,deleteDatabase as S,checkDelData as D,checkModulesDelData as k,getMysqlCloudServer as A,getModulesCloudServer as J}from"./database.js?v=1756369731";import{x as M}from"./useMethod4.js?v=1756369731";import{g as N}from"./useStore2.js?v=1756369731";import{h as O,i as T}from"./validator.js?v=1756369731";import"./__commonjsHelpers__.js?v=1756369731";import"./column.js?v=1756369731";import"./index104.js?v=1756369731";const H={class:"p-[28px]"},C={key:0,class:"text-danger"},R={key:1,class:"text-danger mt-[4px]"},B=r({__name:"index",props:{compData:{default:()=>({ids:[],isMult:!1,rows:[],config:{enable:!1,exclude:[]}})}},setup(r,{expose:B}){var E;const F=r,{refs:{tabActive:G},refreshTableList:K}=N(),{panel:L}=e(),{enable:U,exclude:W}=null==(E=F.compData)?void 0:E.config,{ids:z,isMult:I}=F.compData,P=o(!1),Q=p([]),V=o(L.value.isDbRecycle),X=p([]),Y=p(!1),Z=d("popupSetFooter"),$=u({title:"警告",titleType:"warning",description:"删除数据库后，数据库内的所有数据将被清空，且不可恢复。"}),aa=async(a,e,t)=>{const{id:i,name:n}=X.value[e],r="mysql"===G.value?null:G.value,o=await l({request:S({id:i,name:n},r)});a.push({id:i,name:n,status:o.status}),e===X.value.length-1&&(K(),t?M(a,{title:"删除数据库"}):s.request(o)),e<X.value.length-1&&aa(a,e+1,t)},ea=[{label:"数据库名称",prop:"name"},{label:"数据库大小",prop:"total",render:a=>q("span",n(a.total,!0,2))},{label:"数据库位置",render:a=>{var e;let t="本地数据库";return null==(e=Q.value)||e.forEach(e=>{e.id===a.sid&&(t="mysql"===G.value?e.db_host:e.ps,"127.0.0.1"===e.db_host&&(t="本地数据库"))}),q("span",t)}},{width:160,label:"创建时间",prop:"addtime"},{width:100,label:"删除结果",render:a=>{let e=0===a.sid;return e&&V.value?q("span","移至回收站"):q("span",{class:"text-danger"},"彻底删除")}}];return c(()=>{(async()=>{let a={data:JSON.stringify({type:G.value})};await l({request:"mysql"===G.value?A():J(a,G.value),data:[Array,Q]})})(),(async()=>{Z(!1);const{data:a}=await l({loading:Y,request:"mysql"===G.value?D({ids:JSON.stringify(z)}):k({data:JSON.stringify({ids:JSON.stringify(z)})},G.value),data:{data:[Array,X]}});P.value=null==a?void 0:a.some(a=>a.sid),P.value&&($.titleType="error",$.description="当前列表存在彻底删除后无法恢复的数据库，请仔细查看列表，以防误删，是否继续操作？"),Z(!0)})()}),B({onConfirm:async a=>{await t({type:"input",title:"二次验证信息-删除数据库",content:'移至回收站的数据库如需彻底删除请前往数据库回收站，<span class="text-danger">远程数据库将直接彻底删除</span>，是否继续操作？',icon:"warning-filled",isHtml:!0,input:{content:"删除数据库"}});let e=[];const l=s.load("正在删除...");if(I&&"mysql"===G.value){const a=O(F.compData.rows,W,U),e=await _(a),{data:t}=T(e.data);M(t,{title:"删除"}),K()}else await aa(e,0,I);l.close(),a()}}),(e,t)=>{const s=j,l=i,n=a,r=m("bt-loading");return y(),v("div",H,[f(s,{title:"警告",type:g($).titleType,"show-icon":"",closable:!1,description:g($).description},null,8,["type","description"]),f(n,null,{content:b(()=>[x(f(l,{ref:"deleteRef",data:g(X),column:g(ea),"max-height":300},null,8,["data","column"]),[[r,g(Y)],[r,"正在检查删除数据，请稍候...","title"]])]),_:1}),g(P)?(y(),v("p",C,"注意：远程数据库暂不支持数据库回收站，选中的数据库将彻底删除")):h("",!0),t[0]||(t[0]=w("p",{class:"text-danger mt-4px"},"请仔细阅读以上要删除信息，防止数据库被误删",-1)),g(V)||g(P)?h("",!0):(y(),v("p",R,"当前数据库回收站尚未开启,请谨慎操作!"))])}}});export{B as default};
