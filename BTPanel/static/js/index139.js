import{K as e,gY as a,gZ as l,v as t,b as s,g_ as n,aj as r,g$ as o,l as i,L as u,h0 as c,o as m,h1 as d,ah as p,a6 as v,e as f,al as y,W as g,a2 as b,I as h}from"./utils-lib.js?v=1756369731";import{r as _,e as k,aQ as w,B as x,ao as j,ap as D,an as I,i as z,a4 as P,c as O,q as N,v as q,y as C,z as L,x as S,A as T,F as B,a_ as G,P as M,av as U,M as E,aA as V,N as W,b3 as A,p as H,Z as R}from"./base-lib.js?v=1756369731";import{_ as F}from"./index104.js?v=1756369731";import{_ as K}from"./index103.js?v=1756369731";const Y=s(),Z=_("all");let J=null;const Q=e=>({request:async a=>await le({...a,service_name:e.value.serviceName},Z.value),columns:[{label:"名称",prop:"name",align:"center",width:200},{label:"描述",prop:"description",render:e=>k(w,{effect:"dark",content:e.description,"popper-class":"w-[35rem]","show-after":500,placement:"top-start",disabled:!e._isOverflow},{default:()=>[k("div",{class:"w-[95%] truncate",ref:a=>{a&&(e._isOverflow=a.scrollWidth>a.clientWidth)}},[e.description])]})},{label:"版本",prop:"version",align:"center",width:100},{label:"大小",prop:"size",align:"center",width:100},{label:"状态",prop:"status",align:"center",width:100,renderHeader:()=>k(I,{onCommand:a=>ee(a,Z,e.value)},{default:()=>k("div",{class:"flex items-center"},[k("span",null,[x("状态")]),k("span",null,["all"===Z.value?"":"(".concat(X(Z.value),")")]),k("span",{class:"svgtofont-el-arrow-down"},null)]),dropdown:()=>{let e;return k(j,null,"function"==typeof(a=e=$.map(e=>k(D,{command:e.value},{default:()=>[e.label]})))||"[object Object]"===Object.prototype.toString.call(a)&&!z(a)?e:{default:()=>[e]});var a}}),render:a=>{let l="",t="",s="";switch(a.status){case"installed":l="已安装",t="primary";break;case"downloading":l="下载中",t="warning",s="cursor-pointer flex items-center";break;case"failed":l="失败",t="danger",s="cursor-pointer";break;default:l="未安装",t="#666"}return k("span",{class:"text-".concat(t," ").concat(s),onClick:()=>se(a,e.value)},[l,"downloading"===a.status&&k("span",{class:"inline-block svgtofont-el-loading"},null)])}},{label:"操作",prop:"operate",fixed:"right",width:140,align:"right",render:a=>k("div",{class:"w-full flex items-center justify-end"},["installed"===a.status&&k("span",{class:"bt-link",onClick:()=>te(a,e.value)},[x("查看详情")]),"downloading"===a.status&&k("span",null,[x("--")]),"installed"!==a.status&&"downloading"!==a.status&&k("span",{class:"bt-link",onClick:()=>ne(a,e.value)},[x("下载")]),"installed"===a.status&&k("span",null,[k(F,null,null),k("span",{class:"bt-link",onClick:()=>re(a,e.value)},[x("删除")])])])}]}),$=[{label:"全部",value:"all"},{label:"已安装",value:"installed"},{label:"下载中",value:"downloading"},{label:"失败",value:"failed"},{label:"未安装",value:"uninstall"}],X=e=>({all:"",installed:"已安装",downloading:"下载中",failed:"失败",uninstall:"未安装"}[e]),ee=(e,a,l)=>{a.value=e,1===l.param.p?l.refresh():l.param.p=1},ae={mode:"ace/mode/json",theme:"ace/theme/monokai",wrap:!0,showInvisibles:!1,showFoldWidgets:!1,useSoftTabs:!0,tabSize:2,showPrintMargin:!1,readOnly:!0,fontSize:"12px"},le=async(a,l)=>{const{data:t}=await e({request:n({...a,status:l}),loading:"正在获取模型列表"});return t.status?{total:r(t.page),data:t.data}:(Y.error(t.msg),{total:0,data:[]})},te=async(a,l)=>{e({request:o({model_name:a.name,model_version:a.version,service_name:l.serviceName}),loading:"正在获取模型详情",success:e=>{e.status&&i({title:"模型详情-".concat(a.name),area:75,component:()=>u(()=>import("./model-detail-popup.js?v=1756369731"),__vite__mapDeps([]),import.meta.url),compData:JSON.stringify(e.data,null,2),btns:!1})}})},se=async(e,a)=>{if("downloading"!==e.status)return;const l=[],t=_("正在获取日志");let s=null;return null==J||J.close(),J=p({route:"/sock_shell",onMessage:(e,n)=>{const r=n.data;l.push(r),l.length>50?t.value=l.slice(l.length-50).join("\n"):t.value=l.join("\n"),r.includes("bt_successful")&&(s&&s.unmount(),s=null,a.refresh())}}),null==J||J.send({}),null==J||J.send("tail -f /tmp/".concat(a.serviceName,".log")),s=await i({title:"模型安装日志-".concat(e.name),area:75,component:()=>u(()=>import("./model-install-log.js?v=1756369731"),__vite__mapDeps([]),import.meta.url),compData:t,onCancel:()=>{null==J||J.close(),s=null},btns:!1}),s},ne=async(a,l)=>{if(!a.can_down)return Y.error("当前已存在下载任务，请等待下载完成");e({request:c({model_name:a.name,service_name:l.serviceName,model_version:a.version}),loading:"正在下载模型",success:e=>{e.status?(Y.success("开始下载"),l.refresh(),se({name:a.name,status:"downloading"},l)):Y.error(e.msg)},error:()=>{Y.error("下载失败")}})},re=async(a,l)=>{try{await m({title:"删除模型-".concat(a.name),content:"确定删除该模型吗？"}),e({request:d({service_name:l.serviceName,model_name:a.name,model_version:a.version}),loading:"正在删除模型",success:e=>{e.status?(l.refresh(),Y.success("删除成功")):Y.error(e.msg)}})}catch(t){}},oe=_({}),ie=e=>{var a;return(null==(a=e.power)?void 0:a.current)&&(a.current/=1e3),(null==a?void 0:a.max)&&(a.max/=1e3),(e=>{const a=e=>t(e*1024**3);(null==e?void 0:e.free)&&(e.free=a(e.free)),(null==e?void 0:e.used)&&(e.used=a(e.used)),(null==e?void 0:e.size)&&(e.size=a(e.size))})(e.memory),e},ue=async s=>{try{const n=Number.isInteger(Number(s)),{status:r,data:o,msg:i,...u}=await e({request:n?a({index:Number(s)}):l()});if(!1===r)return Y.error(i),n?void 0:oe.value={system:!1,list:[],tableList:[]};if(n)return void(oe.value.list[Number(s)]={key:s,value:ie(o)});const c=[],m=Object.entries(o).filter(([e])=>"system"!==e).map(([e,a])=>{var l;const s=ie(a);return null==(l=s.processes)||l.forEach(a=>c.push({gpu:e,pid:a.pid,type:a.type,name:a.name,memory:t(a.usedGpuMemory)})),{key:e,value:s}});return o.system.version.cuda="".concat(o.system.version.cuda).split("0").filter(Boolean).join("."),oe.value={system:o.system,list:m,tableList:c},{data:c,total:o.system.count}}catch(n){oe.value={system:!1,list:[],tableList:[]}}},ce=f({name:"ollama",props:["compData"],setup(e){const a=_(),{BtTable:l,BtPage:t,BtSearch:s,BtRefresh:n,refresh:r,param:o}=v(Q(a));return a.value={refresh:r,serviceName:e.compData.service_name,param:o},P(()=>{Z.value="all",oe.value={}}),()=>k("div",{class:"relative"},[k(K,null,{"header-left":()=>k("div",{class:"flex items-center"},[k(s,{class:"!w-[47rem]",placeholder:"请输入模型名称/描述"},null)]),"header-right":()=>k(n,null,null),content:()=>k("div",null,[k(l,{key:"ollamaTable","max-height":410,class:"!min-h-[350px]"},null)]),"footer-right":()=>k(t,null,null)})])}},[["__scopeId","data-v-20353357"]]),me={key:0},de={class:"flex items-center mb-[2rem]"},pe={class:"text-[1.4rem] leading-[2.1rem]"},ve={class:"text-[1.4rem] leading-[2.1rem] ml-[2rem]"},fe={key:1},ye=O({__name:"gpu-info",props:{compData:{}},setup(e){var a;const l=O({props:{data:{type:Object,required:!0},cpuIndex:{type:Number,required:!0}},setup(e){const a=a=>{var l;return"cpuIndex"===a?e.cpuIndex:null!=(l=a.split(".").reduce((e,a)=>e&&e[a],e.data))?l:"null"},l=[{name:"GPU",key:"cpuIndex"},{name:"型号",key:"name"},{name:"核心频率",key:"clock.graphics",unit:"MHz"},{name:"内存频率",key:"clock.memory",unit:"MHz"},{name:"显存大小",key:"memory.size"},{name:"已使用显存",key:"memory.used"},{name:"剩余显存",key:"memory.free"},{name:"当前功耗",key:"power.current",unit:"W"},{name:"最大功耗",key:"power.max",unit:"W"},{name:"风扇转速",key:"fan",unit:"%"}],t=[{content:"显示null说明可能因驱动版本过低或显卡版本过低无法获取对应数据"}],s=[{name:"GPU使用率",key:"utilization.gpu",unit:"%"},{name:"GPU温度",key:"temperature",unit:"°C"}];return()=>k("div",{class:"flex h-[41.5rem]"},[k("div",{class:"flex flex-1 justify-evenly"},[s.map(e=>k("div",null,[k("div",{class:"flex justify-center mb-[2rem]"},[e.name]),k("div",{class:"p-[12px] flex flex-col items-start"},[k(A,{width:170,type:"circle",percentage:a(e.key),"stroke-width":12,color:"#20a53a"},{default:()=>k("div",null,[k("div",{class:"font-bold text-[1.6rem]"},[a(e.key)+(e.unit||"")]),k("div",{class:"mt-[1rem] text-[1.4rem]"},[e.name])])})])]))]),k("div",{class:"flex flex-col items-center justify-start max-w-[20rem]"},[l.map(e=>k("div",{class:"flex items-center justify-start w-full text-[1.4rem] leading-[2.6rem]"},[k("span",null,[e.name,x("：")]),k("span",null,[a(e.key)]),k("span",null,[e.unit||""])])),k(g,{class:"mt-[2.2rem]",options:t},null)])])}}),t=_("".concat(null==(a=e.compData.value.list[0])?void 0:a.key)||"");return(e,a)=>{var s,n,r,o;const i=y,u=U;return N(),q("div",null,[e.compData.value.list&&e.compData.value.list.length>0?(N(),q("div",me,[C("div",de,[C("span",pe,"驱动版本："+L(null==(n=null==(s=S(oe))?void 0:s.system)?void 0:n.version.driver),1),C("span",ve,"Cuda版本："+L(null==(o=null==(r=S(oe))?void 0:r.system)?void 0:o.version.cuda),1)]),k(i,{modelValue:S(t),"onUpdate:modelValue":a[0]||(a[0]=e=>M(t)?t.value=e:null),onChange:S(ue)},{default:T(()=>[(N(!0),q(B,null,G(e.compData.value.list,e=>(N(),E(S(V),{key:e.key,name:e.key,label:"gpu".concat(e.key)},{default:T(()=>[(N(),E(W(S(l)),{data:e.value,cpuIndex:e.key},null,8,["data","cpuIndex"]))]),_:2},1032,["name","label"]))),128))]),_:1},8,["modelValue","onChange"])])):(N(),q("div",fe,[k(u,{description:"未找到GPU设备或未安装GPU驱动"})]))])}}}),ge={name:"ProcessInfo",props:["compData"],setup(e){const{BtTable:a,refresh:l}=v({request:async a=>({data:e.compData.value.tableList,total:e.compData.value.tableList.length}),columns:[{label:"GPU",prop:"gpu"},{label:"PID",prop:"pid"},{label:"TYPE",prop:"type"},{label:"进程名称",prop:"name"},{label:"显存占用",prop:"memory"}]});let t=null;return H(()=>{t=setInterval(()=>{l()},2e3)}),P(()=>{clearInterval(t)}),()=>k("div",null,[k(K,null,{content:()=>k(a,{"max-height":500},null)})])}},be=O({__name:"index",props:{compData:{type:Object,default:()=>({})}},setup(e){const a=e,l=_(!1),t=_(a.compData.tabActive||"manager");R("gpuOpenStatus",l);const{BtTabs:s}=b({type:"left-bg-card",value:t,options:[{label:"模型管理",name:"manager",lazy:!0,render:()=>k(ce,{compData:a.compData},null)},{label:"显卡信息",name:"gpu",lazy:!0,render:()=>k(ye,{compData:oe},null)},{label:"进程信息",name:"process",lazy:!0,render:()=>k(ge,{compData:oe},null)}]});let n=null;return H(()=>{if(a.compData.appinfo&&a.compData.appinfo.length>0){const e=a.compData.appinfo.find(e=>"gpu"===e.fieldKey);e&&e.fieldValue&&(l.value=!0)}l.value?(ue(),n=setInterval(()=>{h(["/mod/docker/gpu/get_all_device_info"]),ue()},3e3)):oe.value={system:!1,list:[],tableList:[]}}),P(()=>{n&&clearInterval(n)}),(e,a)=>(N(),E(S(s)))}}),he=Object.freeze(Object.defineProperty({__proto__:null,default:be},Symbol.toStringTag,{value:"Module"}));export{ae as e,he as i};
function __vite__mapDeps(indexes) {
  if (!__vite__mapDeps.viteFileDeps) {
    __vite__mapDeps.viteFileDeps = []
  }
  return indexes.map((i) => __vite__mapDeps.viteFileDeps[i])
}
