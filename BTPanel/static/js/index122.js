import{r as e,k as a,c as l,p as s,q as t,v as r,y as u,e as o,A as n,x as i,B as m,z as d,M as p,C as c,F as g,T as v,ax as _,a$ as b,ag as y,af as f,a9 as h,D as V,a7 as w}from"./base-lib.js?v=1756369731";import{v as z,o as x,K as B,b as N,j}from"./utils-lib.js?v=1756369731";import{P as k,Q as C,R as U}from"./useController3.js?v=1756369731";import"./__commonjsHelpers__.js?v=1756369731";import"./validator.js?v=1756369731";import"./index104.js?v=1756369731";import"./column.js?v=1756369731";const q=N(),E=e(),M=e({status:!1,num:180,compress:!1,log_size:10,stype:"day",hour:2,minute:0}),S=e("开启后默认每天 2 点 0 分进行切割日志文件，如需修改下面配置"),I=a({num:[{validator:(e,a,l)=>{const s="日志保留最新份必须大于0",t="请输入整数";""===a?l(new Error("请输入日志保留最新份")):isNaN(a)||Number(a)<1?l(new Error(s)):Number.isInteger(Number(a))?l():l(new Error(t))},trigger:"blur"}],log_size:[{required:!0,message:"请输入日志大小",trigger:"blur"},{validator:(e,a,l)=>{!/^\d+(\.\d+)?$/.test(a)||a<=0?l(new Error("请输入大于0的数")):l()},trigger:["blur","change"]}],hour:[{required:!0,message:"请输入小时",trigger:"blur"},{validator:(e,a,l)=>{a<0||a>23||!Number.isInteger(Number(a))?l(new Error("请输入0-23之间的整数")):l()},trigger:["blur","change"]}],minute:[{required:!0,message:"请输入分钟",trigger:"blur"},{validator:(e,a,l)=>{a<0||a>59||!Number.isInteger(Number(a))?l(new Error("请输入0-59之间的整数")):l()},trigger:["blur","change"]}]}),R=async()=>{try{const e=await k(),{status:a,log_size:l}=e.data.value;M.value=e.data.value,M.value.status=Boolean(a),M.value.log_size=l?z(l,!1,2,"MB"):"10.00",S.value="开启后".concat("size"===M.value.stype?"日志文件大小超过":"默认每天").concat("size"===M.value.stype?M.value.log_size+"MB":" ".concat(M.value.hour," 点 ").concat(M.value.minute," 分"),"进行切割日志文件，如需修改下面配置")}catch(e){}},$=async e=>{M.value.status=!e,await x({title:"设置日志切割任务",content:(e?"开启后":"关闭后停止")+"对计划任务日志进行切割，是否继续操作？"}),await B({loading:"正在设置，请稍后...",request:C(),message:!0,success:R})},A=()=>{var e,a;S.value="开启后".concat("size"===M.value.stype?"日志文件大小超过 ":"默认每天 ").concat("size"===M.value.stype?M.value.log_size+" MB ":"".concat((null==(e=M.value.hour)?void 0:e.toString())||"-"," 点 ").concat((null==(a=M.value.minute)?void 0:a.toString())||"-"," 分"),"进行切割日志文件，如需修改下面配置")},D=e=>e<10?"0".concat(e):"".concat(e),F=async()=>{await E.value.validate();const{stype:e,log_size:a}=M.value;if("size"===e&&a<=0)return void q.error("日志大小必须大于0");let l={...M.value};l.status=Number(M.value.status),l.compress=Number(M.value.compress),"day"===l.stype&&(l.log_size=0),await B({loading:"正在设置，请稍后...",request:U(l),message:!0}),R()},H={class:"p-[20px]"},K={class:"mt-[16px] flex items-center"},P={class:"ml-[8px]"},Q={class:"py-[20px]"},T={class:"flex items-center"},G={class:"mt-[8px] leading-8 text-[1.2rem] list-disc ml-[20px]"},J={key:0},L=l({__name:"index",setup:(e,{expose:a})=>(a({onConfirm:F}),s(()=>R()),(e,a)=>{var l;const s=v,z=_,x=b,B=y,N=f,k=h,C=j,U=V,q=w;return t(),r("div",H,[u("div",K,[o(z,{placement:"bottom",width:"200","popper-class":"green-tips-popover",trigger:"hover"},{reference:n(()=>[o(s,{modelValue:i(M).status,"onUpdate:modelValue":a[0]||(a[0]=e=>i(M).status=e),onChange:i($)},{default:n(()=>[...a[7]||(a[7]=[m("日志切割",-1)])]),_:1},8,["modelValue","onChange"])]),default:n(()=>[a[8]||(a[8]=u("span",{class:"p-[8px] inline-block"},"当日志文件过大时，读取和搜索时间会增加，同时也会占用存储空间，因此需要对日志进行切割以方便管理和维护。",-1))]),_:1}),u("span",P,d(i(S)),1)]),o(x),u("div",Q,[o(q,{ref_key:"logSplitRef",ref:E,model:i(M),rules:i(I),class:"-ml-3rem"},{default:n(()=>[o(k,{label:"切割方式"},{default:n(()=>[o(N,{modelValue:i(M).stype,"onUpdate:modelValue":a[1]||(a[1]=e=>i(M).stype=e),onChange:i(A)},{default:n(()=>[o(B,{value:"size"},{default:n(()=>[...a[9]||(a[9]=[m("按日志大小",-1)])]),_:1}),o(B,{value:"day"},{default:n(()=>[...a[10]||(a[10]=[m("按执行周期",-1)])]),_:1})]),_:1},8,["modelValue","onChange"])]),_:1}),"day"==i(M).stype?(t(),p(k,{key:0,label:"执行时间"},{default:n(()=>[u("div",T,[o(k,{label:"",prop:"hour"},{default:n(()=>[o(C,{onBlur:i(A),type:"number",width:"18.6rem",modelValue:i(M).hour,"onUpdate:modelValue":a[2]||(a[2]=e=>i(M).hour=e),min:"0",max:"23"},{prepend:n(()=>[...a[11]||(a[11]=[m("每天",-1)])]),append:n(()=>[...a[12]||(a[12]=[m("时",-1)])]),_:1},8,["onBlur","modelValue"])]),_:1}),o(k,{label:"",prop:"minute",class:"!mt-0"},{default:n(()=>[o(C,{type:"number",width:"12rem",min:"0",onBlur:i(A),max:"59",modelValue:i(M).minute,"onUpdate:modelValue":a[3]||(a[3]=e=>i(M).minute=e)},{append:n(()=>[...a[13]||(a[13]=[m("分",-1)])]),_:1},8,["onBlur","modelValue"])]),_:1})])]),_:1})):"size"==i(M).stype?(t(),p(k,{key:1,label:"日志大小",prop:"log_size"},{default:n(()=>[o(C,{onBlur:i(A),type:"number",width:"16rem",modelValue:i(M).log_size,"onUpdate:modelValue":a[4]||(a[4]=e=>i(M).log_size=e)},{append:n(()=>[...a[14]||(a[14]=[m("MB",-1)])]),_:1},8,["onBlur","modelValue"])]),_:1})):c("",!0),o(k,{label:"保留最新",prop:"num"},{default:n(()=>[o(C,{type:"number",modelValue:i(M).num,"onUpdate:modelValue":a[5]||(a[5]=e=>i(M).num=e),min:1,width:"14rem"},{append:n(()=>[...a[15]||(a[15]=[m("份",-1)])]),_:1},8,["modelValue"])]),_:1}),o(k,{label:" "},{default:n(()=>[o(s,{modelValue:i(M).compress,"onUpdate:modelValue":a[6]||(a[6]=e=>i(M).compress=e)},{default:n(()=>[...a[16]||(a[16]=[m("切割后压缩日志",-1)])]),_:1},8,["modelValue"])]),_:1}),o(k,{label:" "},{default:n(()=>[o(U,{type:"primary",onClick:i(F)},{default:n(()=>[...a[17]||(a[17]=[m("保存",-1)])]),_:1},8,["onClick"])]),_:1})]),_:1},8,["model","rules"]),u("ul",G,["day"===i(M).stype?(t(),r("li",J," 每天的 "+d((null==(l=i(M).hour)?void 0:l.toString())?i(D)(i(M).hour):"--")+":"+d(i(M).minute.toString()?i(D)(i(M).minute):"--")+" 执行一次， 被切割后日志将会被清空 ",1)):(t(),r(g,{key:1},[a[18]||(a[18]=u("li",null,"每5分钟执行一次， 被切割后日志将会被清空",-1)),a[19]||(a[19]=u("li",null,"【日志大小】：日志文件大小超过指定大小时进行切割日志文件",-1))],64)),a[20]||(a[20]=u("li",null,"【保留最新】：保留最新的日志文件，超过指定数量时，将自动删除旧的日志文件",-1)),a[21]||(a[21]=u("li",null,"该功能开启后会对计划任务在/www/server/cron目录下产生的日志(.log格式)进行切割",-1))])])])})});export{L as default};
