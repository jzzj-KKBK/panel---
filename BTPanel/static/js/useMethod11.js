import{l as t,L as e,o as a,K as s,a3 as r,b as n}from"./utils-lib.js?v=1756369731";import{s as o,n as l}from"./base-lib.js?v=1756369731";import{j as i,k as c}from"./ssl.js?v=1756369731";import{e as d}from"./validator.js?v=1756369731";import{reissueCertOrder as p,renewalCert as u,getVerifyResult as m}from"./site.js?v=1756369731";import{u as _}from"./useStore12.js?v=1756369731";import{b as v}from"./useController13.js?v=1756369731";import{u as f}from"./useStore11.js?v=1756369731";import{a as g}from"./useMethod10.js?v=1756369731";const{orderInfo:h,certVerifyInfo:y}=_(),w=n(),{activeTabs:x,sslIsRefresh:E,testIsRefresh:b,encryptIsRefresh:T,otherIsRefresh:j}=o(f()),D=a=>t({isAsync:!0,title:"【".concat(a.title,"】自动续签配置"),area:50,compData:a,component:()=>e(()=>import("./index381.js?v=1756369731"),__vite__mapDeps([]),import.meta.url),showFooter:!0,confirmText:"保存配置",onCancel:a.cancel}),M=async t=>{var e;let s,r=t.crontab_id;try{t.crontab_id=-1,await a({title:"删除【".concat(t.title,"】自动续签"),content:"删除该证书自动续签，是否继续操作？",icon:"warning",width:45}),s=w.load("正在删除证书自动续签，请稍候...");const n=await i({crontab_id:r});if(w.request(n),n.status){const t={ssl:()=>E.value=!0,test:()=>b.value=!0,encrypt:()=>T.value=!0,other:()=>j.value=!0};null==(e=t[x.value])||e.call(t)}}catch(n){n&&l(()=>{t.crontab_id=r})}finally{s&&s.close()}},R=a=>{h.value=a,t({isAsync:!0,title:"完善商业证书资料",area:64,component:()=>e(()=>import("./index382.js?v=1756369731"),__vite__mapDeps([]),import.meta.url),compData:{orderInfo:a,refreshEvent:()=>{var t;const e={ssl:()=>E.value=!0,test:()=>b.value=!0,encrypt:()=>T.value=!0,other:()=>j.value=!0};null==(t=e[x.value])||t.call(e)}}})},A=async(a,r,n)=>{const{data:o,status:l}=await(async(t,e,a)=>{try{const r=await s({loading:"正在验证商用证书，请稍后...",request:m({oid:t,cert_ssl_type:e,pid:a})});return r.status?{data:{oid:t,...r.data,isCNAME:r.data.data.dcvList[0].dcvMethod.indexOf("CNAME_")>-1},status:!0,msg:"验证商用证书成功"}:(w.request(r),{status:!1,msg:"验证商用证书失败"})}catch(r){return{status:!1,msg:"验证商用证书失败"}}})(a,r,n);var i;l&&(i={...o,cert_ssl_type:r,pid:n},y.value=i,t({title:"验证域名-"+(i.isCNAME?"DNS验证":"文件验证"),area:64,component:()=>e(()=>import("./index383.js?v=1756369731"),__vite__mapDeps([]),import.meta.url),compData:i}))},C=async t=>{var e;await a({title:"商业证书续签",content:"当前证书订单需要重新生成新订单，需要手动续签，和重新部署证书，是否继续操作？"});const n={pdata:JSON.stringify({oid:t})},o=await s({loading:"正在续签商业证书，可能等待时间较长，请稍后...",request:p(n),data:Object});if(r(o)&&o.hasOwnProperty("order_info")){let t=o.order_info;v({oid:o.oid,wxcode:o.wxcode,alicode:o.alicode,orderInfo:t,productInfo:{...t,productName:t.title,totalPrice:o.data.price,isRenew:!0}})}else w.request(o);const l={ssl:()=>E.value=!0,test:()=>b.value=!0,encrypt:()=>T.value=!0,other:()=>j.value=!0};null==(e=l[x.value])||e.call(l)},L=async t=>{var e,a,s,n,o,l,i;try{const c=await I(),{data:d}=await u({index:t.index});if(!1===d.status&&d.hasOwnProperty("err")&&r(d.err)){let t="",r=d.msg;if(void 0===(null==(e=d.err)?void 0:e.challenges))t+="\n\t\t\t\t<p><span>响应状态：</span>".concat(d.err.status,"</p>\n\t\t\t\t<p><span>错误类型：</span>").concat(d.err.type,'</p>\n\t\t\t\t<p><span>错误来源：</span><a class="bt-link" href=\'https://letsencrypt.org/\' rel="noreferrer noopener">Let\'s Encrypt官网</a></p>\n\t\t\t\t<div class="flex flex-col">\n\t\t\t\t\t错误代码：\n\t\t\t\t\t<pre class="!text-white !bg-[#333] !inline-block !ml-[4px]">\n\t\t\t\t\t\t').concat(d.err.detail,"\n\t\t\t\t\t</pre>\n\t\t\t\t</div>");else if(!(null==(a=d.err)?void 0:a.challenges[1])&&(null==(s=d.err)?void 0:s.challenges[0])&&(d.err.challenges[1]=d.err.challenges[0]),"invalid"===d.err.status){const e=d.err.identifier.value,a=d.err.challenges[1];null==a||a.error.detail;t+="\n\t\t\t\t\t\t<p><span>验证域名：</span>".concat(e,"</p>\n\t\t\t\t\t");const s="http://".concat(e,"/.well-known/acme-challenge/").concat(null==(n=d.err)?void 0:n.challenges[0].token);t+='\n\t\t\t\t\t\t<p><span>验证URL：</span><a class="bt-link" href=\''.concat(s,"' target='_blank' rel=\"noreferrer noopener\">点击查看</a></p>\n\t\t\t\t\t\t<p><span>验证内容：</span>").concat(null==(o=d.err)?void 0:o.challenges[0].token,'</p>\n\t\t\t\t\t\t<div class="flex flex-col">\n\t\t\t\t\t\t\t错误代码：\n\t\t\t\t\t\t\t<pre class="!text-white !bg-[#333] !inline-block !ml-[4px]">\n\t\t\t\t\t\t\t\t').concat(null==(l=d.err)?void 0:l.challenges[0].error.detail,"\n\t\t\t\t\t\t\t</pre>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t"),t+="<p><span>验证结果：</span> <a style='color:red;'>验证失败</a></p>"}return w.msg({customClass:"bt-message-error-html",dangerouslyUseHTMLString:!0,icon:"x",message:'\n\t\t\t\t\t<div class="flex items-center justify-center mt-[.8rem] mb-2rem">\n\t\t\t\t\t\t<i class="svgtofont-el-circle-close-filled mr-[.8rem] text-[#F56C6C] !text-[3rem]"></i>\n\t\t\t\t\t\t<a style="color: red; font-size:16px">\n\t\t\t\t\t\t\t'.concat(r,'\n\t\t\t\t\t\t</a>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div class="p-[2rem] border border-1 border-color-[#dedede] !rounded-[4px] !mb-[12px] !leading-[26px] bg-[#f8f8f8]">\n\t\t\t\t\t\t').concat(t,"\n\t\t\t\t\t</div>\n\t\t\t\t"),showClose:!0,duration:0}),void c._props.onCancel()}if(w.msg({dangerouslyUseHTMLString:!0,message:d.msg,type:d.status?"success":"error",duration:d.status?2e3:0,showClose:!d.status}),d.status){const t={ssl:()=>E.value=!0,test:()=>b.value=!0,encrypt:()=>T.value=!0,other:()=>j.value=!0};null==(i=t[x.value])||i.call(t)}c._props.onCancel()}catch(c){}},I=()=>t({isAsync:!0,area:[50,25],showFooter:!1,component:()=>e(()=>import("./index384.js?v=1756369731"),__vite__mapDeps([]),import.meta.url)}),O=()=>{d({title:"SSL证书需求反馈收集",type:28,isNoRate:!0,softName:"1",isCard:!1,id:993})},P=a=>{t({isAsync:!0,title:"【".concat(a.title,"】部署证书"),area:45,component:()=>e(()=>import("./index385.js?v=1756369731"),__vite__mapDeps([]),import.meta.url),compData:{row:a},showFooter:!0})},S=async t=>{if("1"===t.type)window.open("/ssl?action=download_cert&oid=".concat(t.oid),"_blank","noopener,noreferrer");else if("3"===t.type){let e={ssl_id:t.id,ssl_hash:t.hash,index:t.index};t.order_status?(delete e.ssl_id,delete e.ssl_hash):delete e.index;const a=await c(e);a.status?window.open(a.msg,"_blank","noopener,noreferrer"):w.error(a.msg)}},k=a=>{"3"!==a.type?(a=>{t({isAsync:!0,title:"【".concat(a.title,"】验证域名"),area:45,component:()=>e(()=>import("./index387.js?v=1756369731"),__vite__mapDeps([]),import.meta.url),compData:{row:a},showFooter:!0})})(a):(a=>{t({isAsync:!0,title:"手动".concat("dns"===a.auth_type?"解析TXT记录":"创建验证文件"),area:70,component:()=>e(()=>import("./index386.js?v=1756369731"),__vite__mapDeps([]),import.meta.url),compData:{row:a},showFooter:!1})})(a)},N=()=>t({isAsync:!0,title:"上传证书",area:80,component:()=>e(()=>import("./index388.js?v=1756369731"),__vite__mapDeps([]),import.meta.url),showFooter:!0}),V={OTHER:"other",TEST:"test",SSL:"ssl",ENCRYPT:"encrypt"},F={[V.OTHER]:{validate:t=>t.endDay>0,errorMessage:"选择的证书中没有可设置告警的证书！只有未过期的证书才能设置告警。",warningMessage:(t,e)=>"已过滤掉 ".concat(t," 个已过期的证书，只对 ").concat(e," 个未过期的证书设置告警。")},[V.TEST]:{validate:t=>"COMPLETED"===t.stateCode&&""!==t.authDomain&&t.endDay>0,errorMessage:"选择的证书中没有可设置告警的证书！只有订单完成、有认证域名且未过期的证书才能设置告警。",warningMessage:(t,e)=>"已过滤掉 ".concat(t," 个不符合条件的证书，只对 ").concat(e," 个符合条件的证书设置告警。")},[V.SSL]:{validate:t=>t.endDay>0,errorMessage:"选择的证书中没有可设置告警的证书！只有未过期的证书才能设置告警。",warningMessage:(t,e)=>"已过滤掉 ".concat(t," 个已过期的证书，只对 ").concat(e," 个未过期的证书设置告警。")},[V.ENCRYPT]:{validate:t=>"valid"===t.order_status,errorMessage:"选择的证书中没有可设置告警的证书！只有订单状态为有效的证书才能设置告警。",warningMessage:(t,e)=>"已过滤掉 ".concat(t," 个订单状态无效的证书，只对 ").concat(e," 个有效证书设置告警。")}},q=(t,e)=>{const a=F[e];return!!a&&a.validate(t)},H=(t,e)=>{const a=F[e];if(!a)return w.error("不支持的证书类型: ".concat(e)),!1;const s=t.filter(a.validate),r=s.length,n=t.length-r;return 0===r?(w.error(a.errorMessage),!1):(n>0&&w.warn(a.warningMessage(n,r)),g({title:"证书",data:s,cancel:()=>{},isMulti:!0}),!0)};export{V as C,P as a,R as b,A as c,S as d,q as e,D as f,M as g,H as h,L as i,I as l,O as o,C as r,N as u,k as v};
function __vite__mapDeps(indexes) {
  if (!__vite__mapDeps.viteFileDeps) {
    __vite__mapDeps.viteFileDeps = []
  }
  return indexes.map((i) => __vite__mapDeps.viteFileDeps[i])
}
